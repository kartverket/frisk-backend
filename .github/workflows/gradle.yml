# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build, test and scan

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  REGISTRY: ghcr.io

jobs:
  test:
    name: Gradle tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: 'x64'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle Wrapper
        run: ./gradlew build
        env:
          environment: test

      - name: Test with Gradle
        run: ./gradlew test
        env:
          environment: test

  docker:
    name: Build and push docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      image_url: ${{ steps.setOutput.outputs.image_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: 'x64'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Execute Gradle build
        run: ./gradlew shadowJar

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=raw,value=${{ github.sha }}

      - name: Build docker and push
        id: build-docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: DockerfileForSkip
          push: ${{ !github.event.pull_request.draft }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set output with build values
        id: setOutput
        run: |
          echo "image_url=${{ env.REGISTRY }}/${{ github.repository }}@${{ steps.build-docker.outputs.digest }}" >> $GITHUB_OUTPUT

  dependencygraph:
    name: Generate dependency graph
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          architecture: 'x64'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v3

  pharos:
    name: Run Pharos
    needs: docker
    permissions:
      actions: read
      packages: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: "Run Pharos"
        uses: kartverket/pharos@v0.2.2
        with:
          image_url: ${{ needs.docker.outputs.image_url }}
