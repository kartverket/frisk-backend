openapi: "3.1.0"
info:
  title: "com_kartverket_funksjonsregister API"
  description: "com_kartverket_funksjonsregister API"
  version: "1.0.0"
servers:
- url: "https://com_kartverket_funksjonsregister"
paths:
  /functions:
    get:
      description: ""
      parameters:
      - name: "search"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Function"
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFunctionDto"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Function"
  /functions/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Function"
    put:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFunctionDto"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Function"
  /functions/{id}/children:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Function"
  /functions/{id}/dependencies:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "integer"
                  format: "int32"
    post:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FunctionDependency"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FunctionDependency"
  /functions/{id}/dependencies/{dependencyId}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      - name: "dependencyId"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
                Example#2:
                  value: "You have to supply an id"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /functions/{id}/dependents:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "You have to supply an id"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "integer"
                  format: "int32"
  /functions/{id}/metadata:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid function id!"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FunctionMetadata"
    post:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFunctionMetadataDTO"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid function id!"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /metadata:
    get:
      description: ""
      parameters:
      - name: "key"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "value"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "functionId"
        in: "query"
        required: false
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/FunctionMetadata"
  /metadata/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid metadata id!"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "501":
          description: "Not Implemented"
          content:
            '*/*':
              schema:
                type: "object"
    patch:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFunctionMetadataDTO"
        required: true
      responses:
        "400":
          description: "Bad Request"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Invalid metadata id!"
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
  /metadata/{id}/function:
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "501":
          description: "Not Implemented"
          content:
            '*/*':
              schema:
                type: "object"
  /metadata/keys:
    get:
      description: ""
      parameters:
      - name: "search"
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  type: "string"
components:
  schemas:
    Function:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        parentId:
          type: "integer"
          format: "int32"
        path:
          type: "string"
      required:
      - "name"
      - "path"
    CreateFunctionDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        parentId:
          type: "integer"
          format: "int32"
      required:
      - "name"
    UpdateFunctionDto:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        parentId:
          type: "integer"
          format: "int32"
        path:
          type: "string"
      required:
      - "name"
      - "path"
    FunctionDependency:
      type: "object"
      properties:
        functionId:
          type: "integer"
          format: "int32"
        dependencyFunctionId:
          type: "integer"
          format: "int32"
    FunctionMetadata:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        functionId:
          type: "integer"
          format: "int32"
        key:
          type: "string"
        value:
          type: "string"
      required:
      - "key"
      - "value"
    CreateFunctionMetadataDTO:
      type: "object"
      properties:
        key:
          type: "string"
        value:
          type: "string"
      required:
      - "key"
      - "value"
    UpdateFunctionMetadataDTO:
      type: "object"
      properties:
        value:
          type: "string"
      required:
      - "value"